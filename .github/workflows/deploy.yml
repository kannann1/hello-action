name: Deploy Hello World App

on:
  push:
    branches:
      - main

jobs:
  provision:
    runs-on: ubuntu-latest
    outputs:
      EC2_IP: ${{ steps.get-ip.outputs.EC2_IP }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Setup AWS Credentials
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
        shell: bash

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      - name: Apply Terraform (Provision EC2)
        id: get-ip
        run: |
          terraform apply -auto-approve
          RAW_IP=$(terraform output -raw instance_public_ip | tr -d '\r' | tr -d '\n')
          echo "RAW_IP=$RAW_IP"
          CLEAN_IP=$(echo $RAW_IP | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | head -n1)
          echo "CLEAN_IP=\"$CLEAN_IP\""
          if [[ -z "$CLEAN_IP" ]]; then
            echo "ERROR: Extracted IP is empty!"
            exit 1
          fi
          echo "EC2_IP=$CLEAN_IP" >> $GITHUB_OUTPUT
          echo "GITHUB_ENV=$GITHUB_OUTPUT"
          cat $GITHUB_OUTPUT
          
        working-directory: terraform


  configure:
    needs: provision
    runs-on: ubuntu-latest
    env:
      EC2_IP: ${{ needs.terraform.outputs.EC2_IP }} 
    steps:
    - name: Install Ansible
      run: sudo apt update && sudo apt install -y ansible

    - name: Create SSH Private Key File
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
        chmod 600 private_key.pem

    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Generate Ansible Inventory
      run: |
        mkdir -p ansible
        echo "GITHUB_ENV=$GITHUB_OUTPUT"
        cat $GITHUB_OUTPUT
        echo "[hello_world]" > ansible/inventory.ini
        echo "${{ env.EC2_IP }}"
        echo "${{ env.EC2_IP }} ansible_user=${{ secrets.EC2_USER }} ansible_ssh_private_key_file=private_key.pem" >> ansible/inventory.ini

    - name: Run Ansible Playbook
      run: ansible-playbook -i ansible/inventory.ini ansible/setup.yaml

  deploy:
    runs-on: ubuntu-latest
    needs: configure

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Archive Project Files
        run: tar -cvf app.tar .

      - name: Copy Files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "app.tar"
          target: "/home/${{ secrets.EC2_USER }}"

      - name: Deploy Application on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/${{ secrets.EC2_USER }}
            tar -xvf app.tar
            cd app
            npm install
            pm2 restart server.js || pm2 start server.js

